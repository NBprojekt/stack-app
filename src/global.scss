/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "~@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "~@ionic/angular/css/normalize.css";
@import "~@ionic/angular/css/structure.css";
@import "~@ionic/angular/css/typography.css";
@import '~@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import "~@ionic/angular/css/padding.css";
@import "~@ionic/angular/css/float-elements.css";
@import "~@ionic/angular/css/text-alignment.css";
@import "~@ionic/angular/css/text-transformation.css";
@import "~@ionic/angular/css/flex-utils.css";

// Add custom packdrop
ion-popover{
  ion-backdrop{
    opacity: 0.5 !important;
  }

  .popover-wrapper{
    .popover-content{
      width: 80vw;
      max-width: 250px;

      * {
        background: #fff;
      }
    }
  }
}

ion-card.card-with-overflow {
  overflow: visible;
  margin-top: 50px;
}

// Set paginator to secondary color
ion-slides {
  .swiper-pagination-bullet, .swiper-pagination-bullet-active {
    background: var(--ion-color-secondary);
  }
}

// Transparent header
ion-toolbar.transparent {
  --opacity: 0;
}
ion-toolbar.absolute {
  position: absolute;
}

// Inside of ion list show a bigger avatart img
ion-avatar.big-avatar  {
  width: 60px;
  height: 60px;
}

.align-items-center {
  display: flex;
  align-items: center!important;
}

.highlighted-by-link {
  animation-name: backgroudPulse;
  animation-duration: 2s;
  animation-iteration-count: 1;
}

@keyframes backgroudPulse {
  0% {
    background-color: var(--ion-color-light);
  }
  50% {
    background-color: rgba(var(--ion-color-primary-rgb), .2);
  }
  100% {
    background-color: var(--ion-color-light);
  }
}

// Count badges for ion label in ion segment
ion-label.segment-label-badge {
  position: relative;

  &:after {
    content: attr(data-count);
    position: absolute;
    display: block;
    top: -10px;
    right: -30px;

    background-color: var(--ion-color-secondary);
    color: var(--ion-color-secondary-contrast);

    border: 2px solid var(--ion-color-secondary-contrast);
    border-radius: 11px;

    font-size: 10px;
    height: 9px;
    line-height: 8px;
    min-width: 9px;
    padding: 4px;
    text-align: center;
    transition: 100ms ease-in-out all;
  }

  &[data-count='0'] {
    &:after {
      display: none;
    }
  }
}

// Inserted posts
.post {
  pre {
    background: rgba($color: #000000, $alpha: .1);
    border-radius: 3px;
    padding: 10px;
    overflow: auto;
    max-height: 400px;
    code {
      background: none;
    }
  }
  code {
    background: rgba($color: #000000, $alpha: .1);
    padding: 0 6px;
    border-radius: 4px;
  }
  p {
    margin: 2px 0 5px;
    line-height: 1.2em;
  }
  blockquote {
    margin: 10px 0;
    padding: 10px 10px 10px 20px;
    position: relative;
    text-align: justify;
    line-height: 1.2em;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      width: 4px;
      border-radius: 8px;
      background: rgba($color: #000000, $alpha: .5);
    }
  }
}

// General
.blur {
  -webkit-backdrop-filter: blur(3px);
  backdrop-filter: blur(3px);
}

.tag {
  background: var(--ion-color-primary-tint);
  color: #fff;
  padding: 0 6px 0;
  line-height: 20px;
  height: 20px;
  margin-right: 3px;
  border-radius: 4px;
  transition: .4s;
  overflow: visible;
}


a, .link {
  color: var(--ion-color-secondary);
  text-decoration: none;

  &:hover {
    color: var(--ion-color-secondary-shade);
  }
}

// Rotation
.rotate-up {
  transform: rotate(0deg);
}
.rotate-right {
  transform: rotate(90deg);
}
.rotate-down {
  transform: rotate(180deg);
}
.rotate-left {
  transform: rotate(-90deg);
}
